name: Github Release

on:
  # Trigger this workflow when a tag is pushed in the format `v1.2.3`.
  push:
    tags:
      # Pattern syntax: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - "v[0-9]+.[0-9]+.[0-9]+*"
  # Trigger this workflow manually via workflow dispatch.
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number in the format `v1.2.3`'
        required: true
        type: string

jobs:
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    permissions: write-all
    # Job name, can be anything
    name: Export game to Github
    steps:
      # Always include the checkout step so that
      # your project is available for Godot to export
      - name: checkout
        uses: actions/checkout@v3.3.0
        # Ensure that you get the entire project history
        with:
          fetch-depth: 0
      - name: export from godot
        # Use latest version (see releases for all versions)
        uses: firebelley/godot-export@v5.2.1
        with:
          # Defining all the required inputs
          # I used the mono version of Godot in this example
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.2.2/Godot_v4.2.2-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.2.2/Godot_v4.2.2-stable_export_templates.tpz
          # set this either to . or your game path, e.g. ./godot in case
          # your game is within a sub-directory
          relative_project_path: ./
          relative_export_path: ./builds
          archive_output: true
      - name: create release
        uses: ncipollo/release-action@v1.12.0
        with:
          token: ${{ secrets.GH_CREDENTIALS }}
          generateReleaseNotes: true
          tag: ${{ github.ref_name }}
          artifacts: ${{ steps.export.outputs.archive_directory }}/*
  