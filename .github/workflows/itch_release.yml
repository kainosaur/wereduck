name: Build & Deploy Game

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/workflows/**'
      - '.gitignore'
      - '**.md'

env:
  BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IS_MAIN: ${{contains(github.ref, 'master')}}
  GODOT_VERSION: "4.2.2" # This affects download links! For example "https://downloads.tuxfamily.org/godotengine/3.4.3/Godot_v3.4.3-stable_linux.x86_64.zip"
  PROJECT_NAME: "Untitled Wild Game"  # insert your project name (human readable)
  ITCH_PROJECT_NAME: "untitled-wild-game" # insert your project name (key / url)
  ITCH_USERNAME: "kainosaurus" # insert your username!
  RCEDIT_SOURCE: "https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-x86.exe"

jobs:
  Build_Exports:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0


######## Install Godot & Export Templates #########
      - name: Download + Authorize Godot
        run: |
          curl -L -o godot.zip https://downloads.tuxfamily.org/godotengine/$GODOT_VERSION/Godot_v$GODOT_VERSION-stable_linux.x86_64.zip
          unzip godot.zip
          mv Godot_v$GODOT_VERSION-stable_linux.x86_64 godot
          ls
          chmod +x godot
      - name: Download Export Templates
        run: |
          curl -L -o export_templates.zip https://downloads.tuxfamily.org/godotengine/$GODOT_VERSION/Godot_v$GODOT_VERSION-stable_export_templates.tpz
          unzip export_templates.zip
      - name: Install Export Templates
        run: |
          mkdir -p ~/.local/share/godot/templates/$GODOT_VERSION.stable
          mv ./templates/* ~/.local/share/godot/templates/$GODOT_VERSION.stable
      - name: Make Exports & Temp Folder
        run: |
          mkdir exports
          mkdir temp_exports
      - name: Export Windows Port
        run: |
          mkdir ./temp_exports/windows
          ./godot --path ./project.godot --export "Windows Desktop" ./temp_exports/windows/$PROJECT_NAME.exe
      - name: Export Mac Port
        run: |
          mkdir ./exports/mac
          ./godot --path ./project.godot --export "Mac OSX" ./exports/mac/$PROJECT_NAME.zip
      - name: Export Linux Port
        run: |
          mkdir ./exports/linux
          ./godot --path ./project.godot --export "Linux/X11" ./exports/linux/$PROJECT_NAME.x86_64
      - name: Add Version Number to Exports
        run: |
          cp ./version.txt ./exports/version.txt


######## Max & Linux Artifacts  #########
      - name: Publish Export Artifact (Mac & Linux)
        uses: actions/upload-artifact@v3
        with:
          name: exports
          path: exports

######## Create A Fresh .ico File #########
      - name: Create ICO (ImageMagick)
        uses: jruipinto/ImageMagick-action@v1
        with:
          command: convert ./icon.png -define icon:auto-resize=256,128,96,72,64,48,32,24,16 ./temp_exports/icon.ico
          
######## Windows Temporary Artifact #########
      - name: Publish Temp Export Artifact (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: temp_exports
          path: temp_exports


######## Windows App Icon #########
  Patch_Windows_EXE_Icon:
    needs: Build_Exports
    if: ${{ contains(github.ref, 'master') }}
    runs-on: windows-latest
    steps:
      - name: Download Windows Artifact & Icon
        uses: actions/download-artifact@v3
        with:
          name: temp_exports
          path: ./exports/
        
      - name: Download rcedit
        run: |
         Invoke-WebRequest -Uri ${{ env.RCEDIT_SOURCE }} -OutFile C:\rcedit.exe
      - name: Patch Icon
        run: |
         & C:\rcedit.exe "./exports/windows/${{ env.PROJECT_NAME }}.exe" --set-icon "./exports/icon.ico"

      - name: Publish Export Artifact (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: exports
          path: exports


######## Publish to itch.io #########
  Publish_Exports_To_Itch:
    needs: [Build_Exports, Patch_Windows_EXE_Icon]
    if: ${{ contains(github.ref, 'master') }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Exports
        uses: actions/download-artifact@v3
        with:
          name: exports
          path: exports
      - name: Download + Authorize Butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler -V
      - name: Login To Butler
        run: ./butler login
      - name: Push Windows Export To Itch
        run: ./butler push ./exports/windows/$PROJECT_NAME.exe $ITCH_USERNAME/$ITCH_PROJECT_NAME:win --userversion-file ./exports/version.txt
      - name: Push Mac Export To Itch
        run: ./butler push ./exports/mac/$PROJECT_NAME.zip $ITCH_USERNAME/$ITCH_PROJECT_NAME:mac --userversion-file ./exports/version.txt
      - name: Push Linux Export To Itch
        run: ./butler push ./exports/linux/$PROJECT_NAME.x86_64 $ITCH_USERNAME/$ITCH_PROJECT_NAME:linux --userversion-file ./exports/version.txt